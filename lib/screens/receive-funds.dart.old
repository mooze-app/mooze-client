import 'package:flutter/material.dart';
import 'package:qr_flutter/qr_flutter.dart';
import 'package:flutter/services.dart';
import 'package:lwk/lwk.dart'; // Make sure to import lwk for the Wallet class

class ReceiveFundsScreen extends StatefulWidget {
  final Wallet wallet;

  const ReceiveFundsScreen({required this.wallet, Key? key}) : super(key: key);

  @override
  _ReceiveFundsScreenState createState() => _ReceiveFundsScreenState();
}

class _ReceiveFundsScreenState extends State<ReceiveFundsScreen> {
  String? _selectedAssetId;
  String? _address;
  bool _isLoading = false;

  final Map<String, Map<String, String>> assetDetails = {
    '6f0279e9ed041c3d710a9f57d0c02928416460c4b722ae3457a11eec381c526d': {
      'name': 'Liquid Bitcoin',
      'logo': 'assets/lbtc-logo.png',
    },
    '02f22f8d9c76ab41661a2729e4752e2c5d1a263012141b86ea98af5472df5189': {
      'name': 'Depix',
      'logo': 'assets/depix-logo.png',
    },
    'ce091c998b83c78bb71a632313ba3760f1763d9cfcffae02258ffa9865a37bd2': {
      'name': 'USDt',
      'logo': 'assets/usdt-logo.png',
    },
  };

  /// Generates a new confidential address for the selected asset
  Future<void> _generateAddress() async {
    if (_selectedAssetId == null) return;

    setState(() {
      _isLoading = true;
    });

    try {
      final address = await widget.wallet.addressLastUnused();
      setState(() {
        _address = address.confidential;
        _isLoading = false;
      });
    } catch (e) {
      setState(() {
        _isLoading = false;
      });
      print("Erro ao gerar endereço: $e");
    }
  }

  /// Copies the address to the clipboard
  void _copyToClipboard() {
    if (_address != null) {
      Clipboard.setData(ClipboardData(text: _address!));
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text("Endereço copiado para a área de transferência!"),
        ),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      appBar: AppBar(
        title: Text("Receber Fundos"),
        backgroundColor: Colors.black,
      ),
      body: Center(
        child: SingleChildScrollView(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Container(
                decoration: BoxDecoration(
                  color: Color(0xFF1E1E1E),
                  borderRadius: BorderRadius.circular(12),
                  border: Border.all(color: Color(0xFFD973C1), width: 1),
                ),
                padding: EdgeInsets.symmetric(horizontal: 12),
                margin: EdgeInsets.only(bottom: 20),
                child: DropdownButtonHideUnderline(
                  child: DropdownButton<String>(
                    value: _selectedAssetId,
                    dropdownColor: Colors.black,
                    icon: Icon(Icons.arrow_drop_down, color: Color(0xFFD973C1)),
                    hint: Text(
                      "Selecione o ativo",
                      style: TextStyle(color: Colors.white),
                    ),
                    style: TextStyle(
                      color: Colors.white,
                    ), // Text style for selected item
                    items:
                        assetDetails.keys.map((assetId) {
                          return DropdownMenuItem<String>(
                            value: assetId,
                            child: Row(
                              children: [
                                Image.asset(
                                  assetDetails[assetId]!['logo']!,
                                  width: 30,
                                  height: 30,
                                ),
                                SizedBox(width: 10),
                                Text(
                                  assetDetails[assetId]!['name']!,
                                  style: TextStyle(color: Colors.white),
                                ),
                              ],
                            ),
                          );
                        }).toList(),
                    onChanged: (value) {
                      setState(() {
                        _selectedAssetId = value;
                        _address = null;
                      });
                    },
                  ),
                ),
              ),

              // QR code area
              Container(
                width: 320,
                height: 320,
                color: Colors.black,
                alignment: Alignment.center,
                child:
                    _isLoading
                        ? CircularProgressIndicator()
                        : (_address != null)
                        ? QrImageView(
                          data: _address!,
                          version: QrVersions.auto,
                          size: 300,
                          gapless: false,
                          backgroundColor: Colors.white,
                          eyeStyle: const QrEyeStyle(
                            eyeShape: QrEyeShape.square,
                            color: Colors.black,
                          ),
                          dataModuleStyle: const QrDataModuleStyle(
                            dataModuleShape: QrDataModuleShape.circle,
                            color: Colors.black,
                          ),
                          embeddedImage: AssetImage(
                            assetDetails[_selectedAssetId!]!['logo']!,
                          ),
                          embeddedImageStyle: QrEmbeddedImageStyle(
                            size: Size(80, 80),
                          ),
                        )
                        : SizedBox.shrink(),
              ),

              SizedBox(height: 20),

              if (_address != null) ...[
                Text(
                  _address!,
                  style: TextStyle(color: Colors.white, fontSize: 14),
                  textAlign: TextAlign.center,
                ),
                SizedBox(height: 20),
              ],

              // Button: either copy address or generate address
              (_address != null)
                  ? ElevatedButton(
                    onPressed: _copyToClipboard,
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Color(0xFFD973C1),
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(25),
                      ),
                      padding: EdgeInsets.symmetric(
                        vertical: 15,
                        horizontal: 30,
                      ),
                    ),
                    child: Text(
                      "Copiar endereço",
                      style: TextStyle(color: Colors.white, fontSize: 16),
                    ),
                  )
                  : ElevatedButton(
                    onPressed: _generateAddress,
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Color(0xFFD973C1),
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(25),
                      ),
                      padding: EdgeInsets.symmetric(
                        vertical: 15,
                        horizontal: 30,
                      ),
                    ),
                    child: Text(
                      "Gerar endereço",
                      style: TextStyle(color: Colors.white, fontSize: 16),
                    ),
                  ),
            ],
          ),
        ),
      ),
    );
  }
}
